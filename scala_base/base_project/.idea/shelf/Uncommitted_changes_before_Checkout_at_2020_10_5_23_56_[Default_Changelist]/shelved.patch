Index: ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/OptionalUseCase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/OptionalUseCase.java	(date 1601647986555)
+++ ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/OptionalUseCase.java	(date 1601647986555)
@@ -0,0 +1,20 @@
+package com.iyang.learn.lambdas;
+
+import java.util.Optional;
+
+/**
+ * Created by Yang on 2020/10/2 22:02
+ *
+ * 关于Optional的使用操作
+ */
+
+public class OptionalUseCase {
+
+    public static void main(String[] args) {
+
+
+
+    }
+
+
+}
Index: ../../java/java8-learn/src/main/java/com/iyang/learn/Java8LearnApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iyang.learn;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class Java8LearnApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(Java8LearnApplication.class, args);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/java8-learn/src/main/java/com/iyang/learn/Java8LearnApplication.java	(revision ebdffecf36464cf55802fa32a2f83dcba4d2d98c)
+++ ../../java/java8-learn/src/main/java/com/iyang/learn/Java8LearnApplication.java	(date 1600868557093)
@@ -6,6 +6,10 @@
 @SpringBootApplication
 public class Java8LearnApplication {
 
+    /**
+     * Start Main Funciton.
+     * @param args
+     */
     public static void main(String[] args) {
         SpringApplication.run(Java8LearnApplication.class, args);
     }
Index: ../../java/design-modle/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- ../../java/design-modle/src/main/resources/application.properties	(revision ebdffecf36464cf55802fa32a2f83dcba4d2d98c)
+++ ../../java/design-modle/src/main/resources/application.properties	(date 1601118635076)
@@ -1,1 +1,4 @@
 
+server.tomcat.accept-count = 8192
+server.tomcat.max-connections = 100
+server.tomcat.max-threads = 200
\ No newline at end of file
Index: ../../java/design-modle/src/main/java/com/iyang/design/modle/web/RequestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/src/main/java/com/iyang/design/modle/web/RequestController.java	(date 1601117898114)
+++ ../../java/design-modle/src/main/java/com/iyang/design/modle/web/RequestController.java	(date 1601117898114)
@@ -0,0 +1,39 @@
+package com.iyang.design.modle.web;
+
+import com.iyang.design.modle.web.service.RequestService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Yang on 2020/9/26 18:12
+ */
+
+@RestController
+@RequestMapping("/yang")
+public class RequestController {
+
+    private static final Logger LOGGER = LoggerFactory.getLogger(RequestController.class);
+
+    @Autowired
+    private RequestService  requestService;
+
+    @GetMapping("/yang")
+    public Object yang(){
+        LOGGER.info("Enter it");
+        List<Object> list = new ArrayList<>();
+        for(int i=0;i<600;i++){
+            list.add(new Object());
+        }
+        requestService.enteriIt(list);
+        return "GavinYang";
+    }
+
+
+}
Index: ../../java/design-modle/src/main/java/com/iyang/design/modle/DesignModleApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iyang.design.modle;\r\n\r\nimport com.iyang.design.modle.create.factory.simple.Shape;\r\nimport com.iyang.design.modle.utils.SimpleFactroyApplicationUtils;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.ConfigurableApplicationContext;\r\n\r\nimport java.util.Map;\r\n\r\n/**\r\n *\r\n * @author yang\r\n * Java 设计模式的基础 Coding 学习和总和运用使用.\r\n *\r\n * 在开发一个项目项目,我们都会弄清楚,开发的这个东西大致需求.\r\n * 结合这些需求的话,我们就可以使用对应的设计模式来完成我们的代码功能.\r\n *\r\n * 1. 创建型模式\r\n * 2. 结构性模式\r\n * 3. 行为型模式\r\n * 4. J2EE模式.\r\n * 当然了,设计模式这个肯定会随着越来越多的东西,对应的使用也是会越来越多的.\r\n * 主要是先学习理解这个设计模式的好处,然后在学习在工作中对其进行使用\r\n *\r\n */\r\n\r\n\r\n\r\n@SpringBootApplication\r\npublic class DesignModleApplication {\r\n\r\n    public static void main(String[] args) {\r\n        ConfigurableApplicationContext applicationContext = SpringApplication.run(DesignModleApplication.class, args);\r\n\r\n        // String[] namesForType = applicationContext.getBeanNamesForType(Shape.class);\r\n       /* Map<String, Shape> beansOfType = applicationContext.getBeansOfType(Shape.class);\r\n        beansOfType.forEach((k,v) -> {\r\n            System.out.println(k);\r\n\r\n        });*/\r\n\r\n\r\n        Shape shape = SimpleFactroyApplicationUtils.getBeanInfo(\"circle\");\r\n        if(shape != null){\r\n            shape.draw();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/src/main/java/com/iyang/design/modle/DesignModleApplication.java	(revision ebdffecf36464cf55802fa32a2f83dcba4d2d98c)
+++ ../../java/design-modle/src/main/java/com/iyang/design/modle/DesignModleApplication.java	(date 1601115176155)
@@ -31,7 +31,8 @@
 public class DesignModleApplication {
 
     public static void main(String[] args) {
-        ConfigurableApplicationContext applicationContext = SpringApplication.run(DesignModleApplication.class, args);
+        ConfigurableApplicationContext applicationContext =
+                SpringApplication.run(DesignModleApplication.class, args);
 
         // String[] namesForType = applicationContext.getBeanNamesForType(Shape.class);
        /* Map<String, Shape> beansOfType = applicationContext.getBeansOfType(Shape.class);
Index: ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/LockingFailureRetryAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/LockingFailureRetryAspect.java	(date 1601118683418)
+++ ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/LockingFailureRetryAspect.java	(date 1601118683418)
@@ -0,0 +1,52 @@
+package com.iyang.design.modle.web.slef;
+
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.Around;
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Pointcut;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.core.annotation.Order;
+import org.springframework.stereotype.Component;
+
+/**
+ * Created by Yang on 2020/9/26 18:52
+ */
+
+@Aspect
+@Component
+@Order(1)
+public class LockingFailureRetryAspect {
+
+    private static final Logger log = LoggerFactory.getLogger(LockingFailureRetryAspect.class);
+
+    private Integer lockFailureRetry = 3;
+
+    @Pointcut("@annotation(com.iyang.design.modle.web.slef.RetryOnFailure)")
+    public void retryOnFailure(){}
+
+    @Around("retryOnFailure()")
+    public Object doConcurrentOperation(ProceedingJoinPoint pjp) throws Throwable {
+        int attempts = 0;
+        Object obj = null;
+        do {
+            attempts++;
+            log.info("The attempts value is {} " , attempts);
+            try {
+                obj = pjp.proceed();
+            } catch (Exception e) {
+                    log.info("retrying....times:{}", attempts);
+                    log.info("retrying .... info {} " , pjp.toString());
+                    log.error("the error is : {}" , e);
+                    if(attempts > lockFailureRetry.intValue()) {
+                        log.info("retry excceed the max times..");
+                        throw e;
+                    }
+            }
+        } while (attempts < lockFailureRetry.intValue());
+        return obj;
+    }
+
+
+}
+
Index: ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/MyFunc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.iyang.learn.lambdas;\r\n\r\n/**\r\n * Created by Yang on 2020/9/13 23:41\r\n */\r\n\r\n@FunctionalInterface\r\npublic interface MyFunc<T> {\r\n\r\n    public T getValue(T t);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/MyFunc.java	(revision ebdffecf36464cf55802fa32a2f83dcba4d2d98c)
+++ ../../java/java8-learn/src/main/java/com/iyang/learn/lambdas/MyFunc.java	(date 1601647309861)
@@ -9,4 +9,15 @@
 
     public T getValue(T t);
 
+    default String getName(){
+        return "返回你需要的名字";
+    }
+
+    /**
+     * 接口中的静态方法
+     */
+    static void show(){
+        System.out.println("接口中的静态方法");
+    }
+
 }
Index: ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/RetryOnFailure.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/RetryOnFailure.java	(date 1601117566023)
+++ ../../java/design-modle/src/main/java/com/iyang/design/modle/web/slef/RetryOnFailure.java	(date 1601117566023)
@@ -0,0 +1,18 @@
+package com.iyang.design.modle.web.slef;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * Created by Yang on 2020/9/26 18:52
+ */
+
+@Target(ElementType.METHOD)
+@Retention(RetentionPolicy.RUNTIME)
+public @interface RetryOnFailure {
+
+
+
+}
Index: ../../java/design-modle/src/main/java/com/iyang/design/modle/web/service/RequestService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/src/main/java/com/iyang/design/modle/web/service/RequestService.java	(date 1601117839985)
+++ ../../java/design-modle/src/main/java/com/iyang/design/modle/web/service/RequestService.java	(date 1601117839985)
@@ -0,0 +1,28 @@
+package com.iyang.design.modle.web.service;
+
+import com.iyang.design.modle.web.slef.RetryOnFailure;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+/**
+ * Created by Yang on 2020/9/26 18:55
+ */
+
+
+@Service
+public class RequestService {
+
+    private static final Logger LOGGER = LoggerFactory.getLogger(RequestService.class);
+
+    @RetryOnFailure
+    public void enteriIt(List<Object> objectList){
+
+        LOGGER.info("Enter the value is {} " , objectList);
+    }
+
+
+
+}
Index: ../../java/design-modle/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.3.2.RELEASE</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.iyang</groupId>\r\n    <artifactId>design-modle</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>design-modle</name>\r\n    <description>设计模式的基础coding</description>\r\n\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.junit.vintage</groupId>\r\n                    <artifactId>junit-vintage-engine</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n            <version>1.2.60</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.google.guava</groupId>\r\n            <artifactId>guava</artifactId>\r\n            <version>22.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-lang3</artifactId>\r\n            <version>3.10</version>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ../../java/design-modle/pom.xml	(revision ebdffecf36464cf55802fa32a2f83dcba4d2d98c)
+++ ../../java/design-modle/pom.xml	(date 1601114565312)
@@ -54,6 +54,11 @@
             <version>3.10</version>
         </dependency>
 
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-aop</artifactId>
+        </dependency>
+
     </dependencies>
 
     <build>
